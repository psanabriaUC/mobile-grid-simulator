SET DATABASE UNIQUE NAME HSQLDB4500E8A81F
SET DATABASE GC 0
SET DATABASE DEFAULT RESULT MEMORY ROWS 0
SET DATABASE EVENT LOG LEVEL 0
SET DATABASE TRANSACTION CONTROL LOCKS
SET DATABASE DEFAULT ISOLATION LEVEL READ COMMITTED
SET DATABASE TRANSACTION ROLLBACK ON CONFLICT TRUE
SET DATABASE TEXT TABLE DEFAULTS ''
SET DATABASE SQL NAMES FALSE
SET DATABASE SQL REFERENCES FALSE
SET DATABASE SQL SIZE TRUE
SET DATABASE SQL TYPES FALSE
SET DATABASE SQL TDC DELETE TRUE
SET DATABASE SQL TDC UPDATE TRUE
SET DATABASE SQL TRANSLATE TTI TYPES TRUE
SET DATABASE SQL CONCAT NULLS TRUE
SET DATABASE SQL UNIQUE NULLS TRUE
SET DATABASE SQL CONVERT TRUNCATE TRUE
SET DATABASE SQL AVG SCALE 0
SET DATABASE SQL DOUBLE NAN TRUE
SET FILES WRITE DELAY 0
SET FILES BACKUP INCREMENT TRUE
SET FILES CACHE SIZE 10000
SET FILES CACHE ROWS 50000
SET FILES SCALE 32
SET FILES LOB SCALE 32
SET FILES DEFRAG 0
SET FILES NIO TRUE
SET FILES NIO SIZE 256
SET FILES LOG TRUE
SET FILES LOG SIZE 50
CREATE USER SA PASSWORD DIGEST 'd41d8cd98f00b204e9800998ecf8427e'
ALTER USER SA SET LOCAL TRUE
CREATE SCHEMA PUBLIC AUTHORIZATION DBA
CREATE AGGREGATE FUNCTION PUBLIC.MODA(IN HOPVALUE INTEGER,IN FLAG BOOLEAN,INOUT HOPVALUES INTEGER ARRAY,INOUT HOPOCCURRENCES INTEGER ARRAY) RETURNS INTEGER ARRAY SPECIFIC MODA_10091 LANGUAGE SQL DETERMINISTIC CONTAINS SQL CALLED ON NULL INPUT BEGIN ATOMIC DECLARE RET INTEGER ARRAY;DECLARE MAJOROCURRENCE INTEGER;DECLARE VALUESCOUNT INTEGER;DECLARE I INTEGER DEFAULT 2;DECLARE INDEXVALUE INTEGER;IF FLAG THEN SET MAJOROCURRENCE=HOPOCCURRENCES[1];SET RET=ARRAY[HOPVALUES[1]];SET VALUESCOUNT=CARDINALITY(HOPVALUES);WHILE I<=VALUESCOUNT DO IF MAJOROCURRENCE<HOPOCCURRENCES[I]THEN SET MAJOROCURRENCE=HOPOCCURRENCES[I];SET RET=TRIM_ARRAY(RET,CARDINALITY(RET)-1);SET RET[1]=HOPVALUES[I];ELSE IF MAJOROCURRENCE=HOPOCCURRENCES[I]THEN SET RET[CARDINALITY(RET)+1]=HOPVALUES[I];END IF;END IF;SET I=I+1;END WHILE;RETURN RET;ELSE IF HOPVALUES IS NULL THEN SET HOPVALUES=ARRAY[HOPVALUE];SET HOPOCCURRENCES=ARRAY[0];END IF;SET INDEXVALUE=POSITION_ARRAY(HOPVALUE IN HOPVALUES);IF INDEXVALUE=0 THEN SET INDEXVALUE=CARDINALITY(HOPOCCURRENCES)+1;SET HOPVALUES[INDEXVALUE]=HOPVALUE;SET HOPOCCURRENCES[INDEXVALUE]=0;END IF;SET HOPOCCURRENCES[INDEXVALUE]=HOPOCCURRENCES[INDEXVALUE]+1;RETURN NULL;END IF;END
SET SCHEMA PUBLIC
CREATE SEQUENCE PUBLIC.SIM_SEQ AS INTEGER START WITH 1
CREATE SEQUENCE PUBLIC.DEVICE_SEQ AS INTEGER START WITH 1
CREATE SEQUENCE PUBLIC.JOBSTATS_SEQ AS INTEGER START WITH 1
CREATE SEQUENCE PUBLIC.JOBTRANSFERED_SEQ AS INTEGER START WITH 1
CREATE MEMORY TABLE PUBLIC.SIMULATION(SIM_ID INTEGER NOT NULL PRIMARY KEY,SIM_NAME VARCHAR(80),SCHEDULER VARCHAR(80) NOT NULL,COMPARATOR VARCHAR(80) NOT NULL,POLICY VARCHAR(80) NOT NULL,STRATEGY VARCHAR(80) NOT NULL,CONDITION VARCHAR(80) NOT NULL,LINK VARCHAR(80) NOT NULL,TOPOLOGY_FILE VARCHAR(80) NOT NULL,JOBS_FILE VARCHAR(80) NOT NULL,BASE_PROFILE VARCHAR(80) NOT NULL,START_TIME TIMESTAMP)
CREATE MEMORY TABLE PUBLIC.DEVICE(DEVICE_ID INTEGER NOT NULL PRIMARY KEY,SIM_ID INTEGER NOT NULL,NAME VARCHAR(50) NOT NULL,BATTERY_CAPACITY BIGINT,MIPS BIGINT,JOIN_TOPOLOGY_TIME BIGINT,LEFT_TOPOLOGY_TIME BIGINT,CONSTRAINT REFERENCE_DEVICE_SIMID FOREIGN KEY(SIM_ID) REFERENCES PUBLIC.SIMULATION(SIM_ID) ON DELETE CASCADE,CONSTRAINT ALTERNATIVE_KEY_DEVICE UNIQUE(SIM_ID,NAME))
CREATE MEMORY TABLE PUBLIC.JOBSTATS(JOBSTATS_ID INTEGER NOT NULL PRIMARY KEY,JOB_ID INTEGER NOT NULL,SIM_ID INTEGER NOT NULL,SUCCESS BOOLEAN NOT NULL,SUCCESS_TRANSFERED_BACK BOOLEAN NOT NULL,START_TIME BIGINT NOT NULL,START_EXEC_TIME BIGINT,FINISH_TIME BIGINT,LAST_TRANSFERED_NODE INTEGER NOT NULL,CONSTRAINT REFERENCE_JOBSTATS_SIMID FOREIGN KEY(SIM_ID) REFERENCES PUBLIC.SIMULATION(SIM_ID) ON DELETE CASCADE,CONSTRAINT ALTERNATIVE_KEY_JOBSTATS UNIQUE(SIM_ID,JOB_ID),CONSTRAINT REFERENCE_JOBSTATS_LASTTRANSFEREDNODE FOREIGN KEY(LAST_TRANSFERED_NODE) REFERENCES PUBLIC.DEVICE(DEVICE_ID) ON DELETE CASCADE)
CREATE MEMORY TABLE PUBLIC.JOBTRANSFERED(JOBTRANSFERED_ID INTEGER NOT NULL PRIMARY KEY,JOBSTATS_ID INTEGER NOT NULL,FROM_DEVICE_ID INTEGER,TO_DEVICE_ID INTEGER NOT NULL,HOP INTEGER NOT NULL,TIME BIGINT,STARTTIME BIGINT NOT NULL,LAST_HOP BOOLEAN NOT NULL,CONSTRAINT REFERENCE_FROMDEVICEID FOREIGN KEY(FROM_DEVICE_ID) REFERENCES PUBLIC.DEVICE(DEVICE_ID),CONSTRAINT REFERENCE_TODEVICEID FOREIGN KEY(TO_DEVICE_ID) REFERENCES PUBLIC.DEVICE(DEVICE_ID),CONSTRAINT REFERENCE_JOBSTATSID FOREIGN KEY(JOBSTATS_ID) REFERENCES PUBLIC.JOBSTATS(JOBSTATS_ID),CONSTRAINT ALTERNATIVE_KEY_JOBTRANSFERED UNIQUE(JOBSTATS_ID,FROM_DEVICE_ID,TO_DEVICE_ID,HOP))
CREATE MEMORY TABLE PUBLIC.HISTORIC_SIMULATION(SIM_ID INTEGER NOT NULL PRIMARY KEY,NOTES VARCHAR(200),CONSTRAINT REFERENCE_HISTORICSIMULATION_SIMID FOREIGN KEY(SIM_ID) REFERENCES PUBLIC.SIMULATION(SIM_ID) ON DELETE CASCADE)
ALTER SEQUENCE SYSTEM_LOBS.LOB_ID RESTART WITH 1
ALTER SEQUENCE PUBLIC.SIM_SEQ RESTART WITH 1
ALTER SEQUENCE PUBLIC.DEVICE_SEQ RESTART WITH 1
ALTER SEQUENCE PUBLIC.JOBSTATS_SEQ RESTART WITH 1
ALTER SEQUENCE PUBLIC.JOBTRANSFERED_SEQ RESTART WITH 1
SET DATABASE DEFAULT INITIAL SCHEMA PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.SQL_IDENTIFIER TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.YES_OR_NO TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.TIME_STAMP TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.CARDINAL_NUMBER TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.CHARACTER_DATA TO PUBLIC
GRANT SELECT,INSERT,UPDATE ON TABLE PUBLIC.SIMULATION TO PUBLIC
GRANT SELECT,INSERT,UPDATE ON TABLE PUBLIC.HISTORIC_SIMULATION TO PUBLIC
GRANT SELECT,INSERT,UPDATE ON TABLE PUBLIC.DEVICE TO PUBLIC
GRANT SELECT,INSERT,UPDATE ON TABLE PUBLIC.JOBSTATS TO PUBLIC
GRANT SELECT,INSERT,UPDATE ON TABLE PUBLIC.JOBTRANSFERED TO PUBLIC
GRANT USAGE ON SEQUENCE PUBLIC.SIM_SEQ TO PUBLIC
GRANT USAGE ON SEQUENCE PUBLIC.DEVICE_SEQ TO PUBLIC
GRANT USAGE ON SEQUENCE PUBLIC.JOBSTATS_SEQ TO PUBLIC
GRANT USAGE ON SEQUENCE PUBLIC.JOBTRANSFERED_SEQ TO PUBLIC
GRANT EXECUTE ON SPECIFIC FUNCTION PUBLIC.MODA_10091 TO PUBLIC
GRANT DBA TO SA
SET SCHEMA SYSTEM_LOBS
INSERT INTO BLOCKS VALUES(0,2147483647,0)
SET SCHEMA PUBLIC
